/*
 * JAIME HIDALGO.
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yarharpictor;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.text.DefaultCaret;
import yarharpictor.tools.UserSettings;

/**
 *
 * @author Jaime Hidalgo Garc√≠a
 */
public class YarPicTerminal extends javax.swing.JFrame {

    YarPicTerminalEngine yar = new YarPicTerminalEngine(this);
    
    /**
     * Creates new form ManualMode
     */
    public YarPicTerminal() {
        initComponents();
        DefaultCaret caret = (DefaultCaret)i_rx.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);
        
        i_tx.addKeyListener(new KeyListener() {
            @Override
            public void keyReleased(KeyEvent e) {
                if( e.getKeyCode() == KeyEvent.VK_ENTER  )
                    i_send.doClick();
            }

            @Override
            public void keyTyped(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void keyPressed(KeyEvent e) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        
                this.addWindowListener(new WindowAdapter(){
                @Override
                public void windowClosing(WindowEvent e){
                    i_dis.doClick();
                    e.getWindow().setVisible(false);
                    //e.getWindow().
                }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        i_rx = new javax.swing.JTextArea();
        i_tx = new javax.swing.JTextField();
        i_send = new javax.swing.JButton();
        i_connect = new javax.swing.JButton();
        i_dis = new javax.swing.JButton();
        i_sendfile = new javax.swing.JButton();
        i_label = new javax.swing.JLabel();
        i_sendfile1 = new javax.swing.JButton();
        i_label2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("YarPic Terminal");

        i_rx.setColumns(20);
        i_rx.setRows(5);
        jScrollPane1.setViewportView(i_rx);

        i_send.setText("Send");
        i_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_sendActionPerformed(evt);
            }
        });

        i_connect.setForeground(new java.awt.Color(153, 153, 0));
        i_connect.setText("Connect");
        i_connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_connectActionPerformed(evt);
            }
        });

        i_dis.setForeground(new java.awt.Color(255, 0, 0));
        i_dis.setText("Disconnect");
        i_dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_disActionPerformed(evt);
            }
        });

        i_sendfile.setText("Send HEX File");
        i_sendfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_sendfileActionPerformed(evt);
            }
        });

        i_label.setText("HyperTerminal Emulator: be careful in this mode");

        i_sendfile1.setText("Send ANY File");
        i_sendfile1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                i_sendfile1ActionPerformed(evt);
            }
        });

        i_label2.setText("Set settings in main Window.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(i_tx)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_send, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(i_sendfile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_sendfile1)
                        .addGap(224, 224, 224)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(i_label, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(i_label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_dis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_connect)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {i_connect, i_dis, i_sendfile, i_sendfile1});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(i_sendfile)
                        .addComponent(i_sendfile1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(i_connect, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(i_dis))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(i_label)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(i_label2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(i_tx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(i_send))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {i_connect, i_dis, i_sendfile, i_sendfile1});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void i_connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_connectActionPerformed
        // TODO add your handling code here:
        yar.connect();
    }//GEN-LAST:event_i_connectActionPerformed

    private void i_disActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_disActionPerformed
        // TODO add your handling code here:
        yar.disconnect();
    }//GEN-LAST:event_i_disActionPerformed

    private void i_sendfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_sendfileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if(selectedFile.isFile()){
                if(selectedFile.getAbsolutePath().toLowerCase().contains(".hex"))
                    yar.sendFile(selectedFile);
            }else{
                i_label.setText("Selected is not a valid .hex file");
            }
        }
    }//GEN-LAST:event_i_sendfileActionPerformed

    private void i_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_sendActionPerformed
        // TODO add your handling code here:
        yar.sendText(i_tx.getText().replace("\n", "").replace("\r",""));
        i_tx.setText("");
    }//GEN-LAST:event_i_sendActionPerformed

    private void i_sendfile1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_i_sendfile1ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            if(selectedFile.isFile()){
                    yar.sendFile(selectedFile);
            }else{
                i_label.setText("Selected is not a valid .hex file");
            }
        }
    }//GEN-LAST:event_i_sendfile1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(YarPicTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(YarPicTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(YarPicTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(YarPicTerminal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new YarPicTerminal().setVisible(true);
            }
        });

        }
        
    


        
    public void setInput(String rx){
        i_rx.setText(rx);
    }
    
    public void setLabelText(String rx){
        i_label2.setText(rx);
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton i_connect;
    private javax.swing.JButton i_dis;
    private javax.swing.JLabel i_label;
    private javax.swing.JLabel i_label2;
    private javax.swing.JTextArea i_rx;
    private javax.swing.JButton i_send;
    private javax.swing.JButton i_sendfile;
    private javax.swing.JButton i_sendfile1;
    private javax.swing.JTextField i_tx;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
